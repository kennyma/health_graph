# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = "health_graph"
  s.version = "0.5.5"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Kenny Ma"]
  s.date = "2012-03-11"
  s.description = "This is a wrapper for RunKeeper Health Graph RESTful API."
  s.email = "kenny@kennyma.me"
  s.extra_rdoc_files = [
    "LICENSE.txt",
    "README.rdoc"
  ]
  s.files = [
    ".document",
    "Gemfile",
    "Gemfile.lock",
    "LICENSE.txt",
    "README.rdoc",
    "Rakefile",
    "VERSION",
    "health_graph.gemspec",
    "lib/health_graph.rb",
    "lib/health_graph/api.rb",
    "lib/health_graph/authentication.rb",
    "lib/health_graph/configuration.rb",
    "lib/health_graph/model.rb",
    "lib/health_graph/models/fitness_activities_feed.rb",
    "lib/health_graph/models/fitness_activity_delete.rb",
    "lib/health_graph/models/fitness_activity_update.rb",
    "lib/health_graph/models/new_fitness_activity.rb",
    "lib/health_graph/models/profile.rb",
    "lib/health_graph/models/sleep_feed.rb",
    "lib/health_graph/models/user.rb",
    "lib/health_graph/models/weight_feed.rb",
    "test/fixtures/background_activities_feed.json",
    "test/fixtures/background_activity.json",
    "test/fixtures/fitness_activities_feed.json",
    "test/fixtures/fitness_activity.json",
    "test/fixtures/new_fitness_activity_params.json",
    "test/fixtures/profile_get.json",
    "test/fixtures/records.json",
    "test/fixtures/sleep_feed_get.json",
    "test/fixtures/team_get_empty.json",
    "test/fixtures/user_get.json",
    "test/fixtures/weight_feed_get.json",
    "test/fixtures/weight_get_empty.json",
    "test/health_graph/test_fitness_activities_feed.rb",
    "test/health_graph/test_new_fitness_activity.rb",
    "test/health_graph/test_profile.rb",
    "test/health_graph/test_sleep_feed.rb",
    "test/health_graph/test_user.rb",
    "test/health_graph/test_weight_feed.rb",
    "test/helper.rb",
    "test/test_health_graph.rb"
  ]
  s.homepage = %q{http://github.com/kennyma/health_graph}
  s.licenses = ["MIT"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.7}
  s.summary = %q{Ruby gem for RunKeeper Health Graph API}

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency('oauth2', ["~> 0.5.2"])
      s.add_runtime_dependency('faraday', ["~> 0.7.4"])
      s.add_runtime_dependency('faraday_middleware', ["~> 0.8.0"])
      s.add_runtime_dependency('hashie', ["~> 1.2"])
      s.add_runtime_dependency('json', [">= 0"])
      s.add_development_dependency('shoulda', [">= 0"])
      s.add_development_dependency('webmock', ["~> 1.7.4"])
      s.add_development_dependency('bundler', ["~> 1.0.0"])
      s.add_development_dependency('jeweler', ["~> 1.6.4"])
      s.add_development_dependency('rcov', [">= 0"])
    else
      s.add_dependency('oauth2', ["~> 0.5.2"])
      s.add_dependency('faraday', ["~> 0.7.4"])
      s.add_dependency('faraday_middleware', ["~> 0.8.0"])
      s.add_dependency('hashie', ["~> 1.2"])
      s.add_dependency('json', [">= 0"])
      s.add_dependency('shoulda', [">= 0"])
      s.add_dependency('webmock', ["~> 1.7.4"])
      s.add_dependency('bundler', ["~> 1.0.0"])
      s.add_dependency('jeweler', ["~> 1.6.4"])
      s.add_dependency('rcov', [">= 0"])
    end
  else
    s.add_dependency('oauth2', ["~> 0.5.2"])
    s.add_dependency('faraday', ["~> 0.7.4"])
    s.add_dependency('faraday_middleware', ["~> 0.8.0"])
    s.add_dependency('hashie', ["~> 1.2"])
    s.add_dependency('json', [">= 0"])
    s.add_dependency('shoulda', [">= 0"])
    s.add_dependency('webmock', ["~> 1.7.4"])
    s.add_dependency('bundler', ["~> 1.0.0"])
    s.add_dependency('jeweler', ["~> 1.6.4"])
    s.add_dependency('rcov', [">= 0"])
  end
end

